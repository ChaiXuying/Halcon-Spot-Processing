<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="20.11.1.0">
<procedure name="main">
<interface/>
<body>
<c>*打开相机</c>
<l>*open_framegrabber ('GigEVision2', 0, 0, 0, 0, 0, 0, 'progressive', -1, 'default', -1, 'false', 'default', '0030531cbace_Basler_acA130060gm', 0, -1, AcqHandle)</l>
<l>*open_framegrabber ('DirectShow', 1, 1, 0, 0, 0, 0, 'default', 8, 'rgb', -1, 'false', 'default', '[0] EasyCamera', 0, -1, AcqHandle)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l>close_framegrabber (AcqHandle)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,1]" as_ord="1">open_framegrabber ('GigEVision2', 0, 0, 0, 0, 0, 0, 'progressive', -1, 'default', -1, 'false', 'default', '0030531cbace_Basler_acA130060gm', 0, -1, AcqHandle)</l>
<c></c>
<c>*设定曝光时间</c>
<l>Time:=[30000,150000,916000,30000,150000,916000]</l>
<l>Number:=1</l>
<l>count:=0</l>
<l>while(count&lt;6)</l>
<l>ExposureTime:=Time[count]</l>
<l> if (count=3)</l>
<c>    *采三张底图后暂停，按F5继续</c>
<c>    *控制全站仪打光----</c>
<l>    stop()</l>
<l> endif</l>
<l>set_framegrabber_param (AcqHandle, 'ExposureTimeAbs', ExposureTime)</l>
<l>set_framegrabber_param (AcqHandle, 'ExposureTimeRaw', ExposureTime)</l>
<l>grab_image_start (AcqHandle, -1)</l>
<l>grab_image_async (Image, AcqHandle, -1)</l>
<l>count :=count+1</l>
<c></c>
<c>*将图写入文件</c>
<l>write_image ( Image, 'tiff', 0, 'E:/Temp/tx/'+count$'.')</l>
<l>endwhile</l>
<l>close_framegrabber (AcqHandle)</l>
<c></c>
<c>*读取底图和光斑图———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————</c>
<l>read_image (image1_1, 'E:/Temp/tx/1.tif')</l>
<l>read_image (image1_2, 'E:/Temp/tx/4.tif')</l>
<c></c>
<c>*光斑图与底图相减</c>
<l>abs_diff_image ( image1_1,  image1_2,image1_1,1)</l>
<c></c>
<c>*选择ROI</c>
<l>gen_rectangle1 (Large1, 130, 230, 890, 1050)</l>
<l>reduce_domain(image1_1, Large1, image1_2)</l>
<c></c>
<c>*图像滤波</c>
<l>mean_image (image1_2,image1_2, 5,5)</l>
<c></c>
<c>*筛选光斑</c>
<l>threshold ( image1_2, Large1, 200, 255)</l>
<l>connection( Large1,  Large1)</l>
<l>fill_up (Large1, Large1)</l>
<l> select_shape (Large1, Large1, 'circularity', 'or', 0.4, 1)</l>
<l>area_center (Large1, Area1, Row1, Column1)</l>
<l>count_obj (Large1, Number)</l>
<l>Area1:=0</l>
<l>while (Number&gt;1)</l>
<l>    Area1:=Area1+300</l>
<l>    select_shape(Large1, Large1, 'area', 'and', Area1,999999999999)</l>
<l>    count_obj (Large1, Number)</l>
<l>endwhile</l>
<c></c>
<c>*获取光斑面积、横坐标、纵坐标</c>
<l>area_center (Large1, Area1, Row1, Column1)</l>
<c></c>
<c>*光斑亮度计算</c>
<l>intensity (Large1, image1_2, Mean2, Deviation2)</l>
<l>QD:=Deviation2</l>
<l>LD:=Mean2</l>
<c>*设定线条格式</c>
<l>*dilation_circle (Large1, Large1, 1.5 )</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (2)</l>
<l>* dev_set_color ('yellow')</l>
<l>dev_set_draw ('fill')</l>
<l>*dev_display (Large1)</l>
<c></c>
<l>tuple_length(Area1,Number)</l>
<l>if (Number=0 or Area1&lt;6.28)</l>
<l>    Area1:=6.28</l>
<l>endif</l>
<l>CRadius1:=sqrt(Area1/3.1415926)/1.5</l>
<l>opening_circle (Large1,Large1, CRadius1)</l>
<l>shape_trans (Large1, Large1, 'outer_circle')</l>
<l>area_center (Large1, Area1, Row1, Column1)</l>
<c>*计算光斑半径</c>
<l>CRadius1:=sqrt(Area1/3.1415926)</l>
<l>gen_contour_region_xld (Large1, Large1, 'border')</l>
<l>dev_display ( image1_1)</l>
<l>smooth_contours_xld(Large1,Large1, 5)</l>
<l>*stop()</l>
<c></c>
<c>*——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————</c>
<c></c>
<l>read_image (image2_1, 'E:/Temp/tx/2.tif')</l>
<l>read_image (image2_2, 'E:/Temp/tx/5.tif')</l>
<l>abs_diff_image ( image2_1,  image2_2,image2_1,1)</l>
<c></c>
<l>gen_rectangle1 (Large2, 130, 230, 890, 1050)</l>
<l>reduce_domain(image2_1, Large2, image2_2)</l>
<l>mean_image (image2_2,image2_2, 5, 5)</l>
<l>threshold ( image2_2, Large2, 150, 255)</l>
<l>connection( Large2,  Large2)</l>
<l>fill_up (Large2, Large2)</l>
<l> select_shape (Large2, Large2, 'circularity', 'or', 0.2, 1)</l>
<c> </c>
<l>area_center (Large2, Area2, Row2, Column2)</l>
<l>count_obj (Large2, Number)</l>
<l>Area2:=0</l>
<l>while (Number&gt;1)</l>
<l>    Area2:=Area2+300</l>
<l>    select_shape(Large2, Large2, 'area', 'and', Area2,999999999999)</l>
<l>    count_obj (Large2, Number)</l>
<l>endwhile</l>
<c></c>
<l>area_center (Large2, Area2, Row2, Column2)</l>
<c></c>
<c>*光斑强度计算</c>
<l>intensity (Large2, image2_2, Mean1, Deviation1)</l>
<l>QD1:=Deviation1</l>
<l>LD1:=Mean1</l>
<l>* dilation_circle (Large2, Large2, 1)</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (2)</l>
<l>* dev_set_color ('yellow')</l>
<l>dev_set_draw ('fill')</l>
<c></c>
<l>tuple_length(Area2,Number)</l>
<l>if (Number=0 or Area2&lt;6.28)</l>
<l>    Area2:=6.28</l>
<l>endif</l>
<c></c>
<l>CRadius2:=sqrt(Area2/3.1415926)/1.5</l>
<l>opening_circle (Large2,Large2,CRadius2)</l>
<l>shape_trans (Large2, Large2, 'outer_circle')</l>
<l>area_center (Large2, Area2, Row2, Column2)</l>
<l>CRadius2:=sqrt(Area2/3.1415926)</l>
<l>gen_contour_region_xld (Large2, Large2, 'border')</l>
<l>dev_display ( image2_1)</l>
<l>smooth_contours_xld(Large2,Large2, 5)</l>
<l>*stop()</l>
<c></c>
<c>*——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————</c>
<c></c>
<l>read_image (image3_1, 'E:/Temp/tx/3.tif')</l>
<l>read_image (image3_2, 'E:/Temp/tx/6.tif')</l>
<l>abs_diff_image ( image3_1,  image3_2,image3_1,1)</l>
<c></c>
<c></c>
<l>gen_rectangle1 (Large3, 130, 230, 890, 1050)</l>
<l>reduce_domain(image3_1, Large3, image3_2)</l>
<l>mean_image (image3_2,image3_2, 5, 5)</l>
<l>threshold ( image3_2, Large3, 200, 255)</l>
<l>connection( Large3,  Large3)</l>
<l>fill_up (Large3, Large3)</l>
<c></c>
<l> select_shape (Large3, Large3, 'circularity', 'or', 0.1, 1)</l>
<c></c>
<c></c>
<l>area_center (Large3, Area3, Row3, Column3)</l>
<l>count_obj (Large3, Number)</l>
<l>Area3:=0</l>
<l>while (Number&gt;1)</l>
<l>    Area3:=Area3+300</l>
<l>    select_shape(Large3, Large3, 'area', 'and', Area3,999999999999)</l>
<l>    count_obj (Large3, Number)</l>
<l>endwhile</l>
<c></c>
<c></c>
<l>area_center (Large3, Area3, Row3, Column3)</l>
<l>* dilation_circle (Large3, Large3, 1.5)</l>
<c>*光斑亮度计算</c>
<l>intensity (Large3, image3_2, Mean, Deviation)</l>
<l>QD2:=Deviation</l>
<l>LD2:=Mean</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (2)</l>
<l>* dev_set_color ('yellow')</l>
<l>* dev_display (Large3)</l>
<l>dev_set_draw ('fill')</l>
<c></c>
<l>tuple_length(Area3,Number)</l>
<l>if (Number=0 or Area3&lt;6.28)</l>
<l>    Area3:=6.28</l>
<l>endif</l>
<c></c>
<l>CRadius3:=sqrt(Area3/3.1415926)/1.5</l>
<l>opening_circle (Large3,Large3, CRadius3)</l>
<l>shape_trans (Large3, Large3, 'outer_circle')</l>
<l>area_center (Large3, Area3, Row3, Column3)</l>
<l>CRadius3:=sqrt(Area3/3.1415926)</l>
<l>gen_contour_region_xld (Large3, Large3, 'border')</l>
<l>dev_display ( image3_1)</l>
<l>smooth_contours_xld(Large3,Large3,5)</l>
<l>*stop()</l>
<c>********************************</c>
<c>*光斑筛选，输出最好光斑图像的质心坐标</c>
<l>A:=[QD,QD1,QD2]</l>
<l>B:=[LD,LD1,LD2]</l>
<l>index:=find(A,min(A))</l>
<l>index1:=find(B,max(B))</l>
<l>if(index=index1)</l>
<l>    if(index=0 and index1=0)</l>
<l>        x:=Row1</l>
<l>        y:=Column1</l>
<l>    elseif(index=1 and index1=1)</l>
<l>        x:=Row2</l>
<l>        y:=Column2</l>
<l>    elseif(index=2 and index1=2)</l>
<l>        x:=Row3</l>
<l>        y:=Column3</l>
<l>    endif</l>
<l>else</l>
<l>    if(index=0)</l>
<l>        x:=Row1</l>
<l>        y:=Column1</l>
<l>    elseif(index=1)</l>
<l>        x:=Row2</l>
<l>        y:=Column2</l>
<l>    elseif(index=2)</l>
<l>        x:=Row3</l>
<l>        y:=Column3</l>
<l>    endif</l>
<l>endif</l>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
